/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.generated.tables.MemberAttendedMeeting;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberAttendedMeetingRecord extends UpdatableRecordImpl<MemberAttendedMeetingRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1787479126;

    /**
     * Setter for <code>member_attended_meeting.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>member_attended_meeting.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>member_attended_meeting.member_id</code>.
     */
    public void setMemberId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>member_attended_meeting.member_id</code>.
     */
    public String getMemberId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>member_attended_meeting.meeting_id</code>.
     */
    public void setMeetingId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>member_attended_meeting.meeting_id</code>.
     */
    public String getMeetingId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MemberAttendedMeeting.MEMBER_ATTENDED_MEETING.ID;
    }

    @Override
    public Field<String> field2() {
        return MemberAttendedMeeting.MEMBER_ATTENDED_MEETING.MEMBER_ID;
    }

    @Override
    public Field<String> field3() {
        return MemberAttendedMeeting.MEMBER_ATTENDED_MEETING.MEETING_ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMemberId();
    }

    @Override
    public String component3() {
        return getMeetingId();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMemberId();
    }

    @Override
    public String value3() {
        return getMeetingId();
    }

    @Override
    public MemberAttendedMeetingRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public MemberAttendedMeetingRecord value2(String value) {
        setMemberId(value);
        return this;
    }

    @Override
    public MemberAttendedMeetingRecord value3(String value) {
        setMeetingId(value);
        return this;
    }

    @Override
    public MemberAttendedMeetingRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberAttendedMeetingRecord
     */
    public MemberAttendedMeetingRecord() {
        super(MemberAttendedMeeting.MEMBER_ATTENDED_MEETING);
    }

    /**
     * Create a detached, initialised MemberAttendedMeetingRecord
     */
    public MemberAttendedMeetingRecord(String id, String memberId, String meetingId) {
        super(MemberAttendedMeeting.MEMBER_ATTENDED_MEETING);

        set(0, id);
        set(1, memberId);
        set(2, meetingId);
    }
}
