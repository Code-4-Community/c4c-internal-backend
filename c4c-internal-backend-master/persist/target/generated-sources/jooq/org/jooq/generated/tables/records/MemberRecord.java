/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.generated.tables.Member;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberRecord extends UpdatableRecordImpl<MemberRecord> implements Record7<String, String, String, String, Integer, String, Integer> {

    private static final long serialVersionUID = -747066597;

    /**
     * Setter for <code>member.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>member.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>member.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>member.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>member.first_name</code>.
     */
    public void setFirstName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>member.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>member.last_name</code>.
     */
    public void setLastName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>member.last_name</code>.
     */
    public String getLastName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>member.graduation_year</code>.
     */
    public void setGraduationYear(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>member.graduation_year</code>.
     */
    public Integer getGraduationYear() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>member.major</code>.
     */
    public void setMajor(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>member.major</code>.
     */
    public String getMajor() {
        return (String) get(5);
    }

    /**
     * Setter for <code>member.privilege_level</code>.
     */
    public void setPrivilegeLevel(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>member.privilege_level</code>.
     */
    public Integer getPrivilegeLevel() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, Integer, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, Integer, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Member.MEMBER.ID;
    }

    @Override
    public Field<String> field2() {
        return Member.MEMBER.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return Member.MEMBER.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Member.MEMBER.LAST_NAME;
    }

    @Override
    public Field<Integer> field5() {
        return Member.MEMBER.GRADUATION_YEAR;
    }

    @Override
    public Field<String> field6() {
        return Member.MEMBER.MAJOR;
    }

    @Override
    public Field<Integer> field7() {
        return Member.MEMBER.PRIVILEGE_LEVEL;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getLastName();
    }

    @Override
    public Integer component5() {
        return getGraduationYear();
    }

    @Override
    public String component6() {
        return getMajor();
    }

    @Override
    public Integer component7() {
        return getPrivilegeLevel();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getLastName();
    }

    @Override
    public Integer value5() {
        return getGraduationYear();
    }

    @Override
    public String value6() {
        return getMajor();
    }

    @Override
    public Integer value7() {
        return getPrivilegeLevel();
    }

    @Override
    public MemberRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public MemberRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public MemberRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public MemberRecord value4(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public MemberRecord value5(Integer value) {
        setGraduationYear(value);
        return this;
    }

    @Override
    public MemberRecord value6(String value) {
        setMajor(value);
        return this;
    }

    @Override
    public MemberRecord value7(Integer value) {
        setPrivilegeLevel(value);
        return this;
    }

    @Override
    public MemberRecord values(String value1, String value2, String value3, String value4, Integer value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberRecord
     */
    public MemberRecord() {
        super(Member.MEMBER);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(String id, String email, String firstName, String lastName, Integer graduationYear, String major, Integer privilegeLevel) {
        super(Member.MEMBER);

        set(0, id);
        set(1, email);
        set(2, firstName);
        set(3, lastName);
        set(4, graduationYear);
        set(5, major);
        set(6, privilegeLevel);
    }
}
